flows:
  'c2s':
     proto: 'tcp'
     src: '192.168.1.49'
     sport: 'random_num(3000,4000)'
     dst: '10.1.1.49'
     dport: 21

  's2c':
     proto: 'tcp'
     src: '10.1.1.49'
     sport: 21

  'c2s_data':
     proto: 'tcp'
     src: 'c2s.src'
     sport: '56121'


scenario: 
- send:
    flow: 'c2s'
    flags: S
- recv:
    flow: 's2c'
    flags: S
    exec:
    - s2c.dst=pkt[IP].src
    - s2c.dport=pkt[TCP].sport
- send:
    flow: 's2c'
    flags: SA
- recv:
    flow: 'c2s'
    flags: SA
- send: 
    flow: 'c2s'
    flags: A
- recv:
    flow: 's2c'
    flags: A

- connect:
    flow: 'c2s'


- send: 
    flow: 's2c'
    data: |-
      220 Service ready for new user\r\n
- recv: 
    flow: 'c2s'
    match: '220.*'

 # FTP session  
- send:
   flow: 'c2s'
   data: |-
     USER aawais\r\n
- recv:
    flow: 's2c'
    match: 'USER .+'
- send:
    flow: 's2c'
    data: |-
      331 Enter password.\r\n
- recv:
    flow: 'c2s'
    match: '331 .*pass'


- send:
    flow: 'c2s'
    data: |-
      PASS simsim\r\n
- recv:
    flow: 's2c'
    match: 'PASS .+'
- send: 
    flow: 's2c'
    data: |-
      230 aawais logged on.\r\n
- recv:
    flow: 'c2s'
    match: '230.*logged'


- send:
    flow: 'c2s'
    data: |-
      PORT {c2s.src.replace(".",",")},{c2s_data.sport>>8},{c2s_data.sport & 0xff}\r\n
- recv:
    flow: 's2c'
    match: 'PORT .+'
- send:
    flow: 's2c'
    data: |-
      200 PORT subcommand request successful.\r\n
- recv:
    flow: 'c2s'
    match: '200.*successful'

